# Generated by roxygen2: do not edit by hand

S3method("default_model_id<-",jags_analysis)
S3method("derived_code<-",jags_analysis)
S3method("derived_code<-",jags_model)
S3method("gen_inits<-",jags_model)
S3method("model_code<-",jags_model)
S3method("model_id<-",jags_model)
S3method("modify_data<-",jags_model)
S3method("modify_data_derived<-",jags_analysis)
S3method("modify_data_derived<-",jags_model)
S3method("monitor<-",jags_model)
S3method("random_effects<-",jags_analysis)
S3method("random_effects<-",jags_model)
S3method("select_data<-",jags_model)
S3method("select_data_derived<-",jags_analysis)
S3method("select_data_derived<-",jags_model)
S3method(as.jags_model,jags_analysis)
S3method(auto_corr,jags_analysis)
S3method(auto_corr,jags_sample)
S3method(coef,jags_analysis)
S3method(coef,jags_sample)
S3method(combine,jags_model)
S3method(combine,jags_sample)
S3method(convergence,jags_analysis)
S3method(convergence,jags_sample)
S3method(convergence_threshold,jags_analysis)
S3method(cross_corr,jags_analysis)
S3method(cross_corr,jags_sample)
S3method(dataset,jags_analysis)
S3method(dataset,jags_sample)
S3method(default_model_id,jags_analysis)
S3method(derived_code,jags_analysis)
S3method(derived_code,jags_model)
S3method(fitted,jags_analysis)
S3method(gen_inits,jags_analysis)
S3method(gen_inits,jags_model)
S3method(is_converged,jags_analysis)
S3method(is_parallel,jags_analysis)
S3method(model_code,jags_analysis)
S3method(model_code,jags_model)
S3method(model_id,jags_analysis)
S3method(model_id,jags_model)
S3method(modify_data,jags_analysis)
S3method(modify_data,jags_model)
S3method(modify_data_derived,jags_analysis)
S3method(modify_data_derived,jags_model)
S3method(monitor,jags_analysis)
S3method(monitor,jags_model)
S3method(nanalyses,jagr_analysis)
S3method(nanalyses,jags_analysis)
S3method(nchains,jags_analysis)
S3method(niters,jags_analysis)
S3method(nmodels,jagr_model)
S3method(nmodels,jags_analysis)
S3method(nmodels,jags_model)
S3method(nsamples,jags_analysis)
S3method(plot,jags_analysis)
S3method(predict,jags_analysis)
S3method(print,jags_analysis)
S3method(print,jags_model)
S3method(print,summary_jags_analysis)
S3method(random_effects,jags_analysis)
S3method(random_effects,jags_model)
S3method(residuals,jags_analysis)
S3method(select_data,jags_analysis)
S3method(select_data,jags_model)
S3method(select_data_derived,jags_analysis)
S3method(select_data_derived,jags_model)
S3method(subset,jags_analysis)
S3method(subset,jags_model)
S3method(summary,jags_analysis)
S3method(update,jags_analysis)
export("default_model_id<-")
export("derived_code<-")
export("gen_inits<-")
export("model_code<-")
export("model_id<-")
export("modify_data<-")
export("modify_data_derived<-")
export("monitor<-")
export("random_effects<-")
export("select_data<-")
export("select_data_derived<-")
export(add_jags)
export(as.jags_model)
export(auto_corr)
export(combine)
export(combine_list)
export(convergence)
export(convergence_threshold)
export(cross_corr)
export(data_jags)
export(dataset)
export(ddply_jags_sample)
export(default_model_id)
export(derived_code)
export(gen_inits)
export(is.jags_analysis)
export(is.jags_model)
export(is.jags_sample)
export(is_converged)
export(is_parallel)
export(jags_analysis)
export(jags_model)
export(merge_jags_samples)
export(model)
export(model_code)
export(model_id)
export(modify_data)
export(modify_data_derived)
export(monitor)
export(nanalyses)
export(nchains)
export(niters)
export(nmodels)
export(nsamples)
export(ntries)
export(options_jaggernaut)
export(opts_jagr)
export(predictive_check)
export(random_effects)
export(select_data)
export(select_data_derived)
import(assertthat)
import(coda)
import(doParallel)
import(itertools)
import(rjags)
importFrom(abind,abind)
importFrom(foreach,"%dopar%")
importFrom(foreach,foreach)
importFrom(foreach,getDoParWorkers)
importFrom(juggler,"jg_block_names<-")
importFrom(juggler,jg_block_names)
importFrom(juggler,jg_check)
importFrom(juggler,jg_nblock)
importFrom(magrittr,"%<>%")
importFrom(magrittr,"%>%")
importFrom(plyr,ddply)
importFrom(plyr,ldply)
importFrom(plyr,llply)
importFrom(plyr,round_any)
importFrom(stats,quantile)
importFrom(stats,sd)
